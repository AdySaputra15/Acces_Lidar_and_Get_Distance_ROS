#include "ros/ros.h"
#include "sensor_msgs/LaserScan.h"
#include <cmath>
#include <iostream>

void scanCallback(const sensor_msgs::LaserScan::ConstPtr& scan)
{
	float angle_min = scan->angle_min;
	float angle_increment = scan ->angle_increment;
	int ranges_size = scan->ranges.size();

	for (int i = 0; i < ranges_size; ++i)
	{
		//FIlter 180 derajat didepan lidar
		float bangle_deg = angle * 180.0 / M_PI;

		//Proses sudut kelipatan 10
		if (static_cast<int>(angle_deg) % 10 == 0)
		{
			float distance = scan->ranges[i];
                	float x = distance * cos(angle);
                	float y = distance * sin(angle);

                	// Cetak data jarak, sudut, dan koordinat (x, y)
                	ROS_INFO("Distance: %.2f m", distance);
                	ROS_INFO("Angle: %.2f deg", angle_deg);
                	ROS_INFO("Coordinates: (%.2f, %.2f)", x, y);

	}
}


int main(int argc, char **argv)
{
	ros::init(argc, argv, "lidar_listener");
	ros::NodeHandle n;
	ros::Subscriber sub = n.subscribe("/scan", 1000, scanCallback);
	ros::spin();

	return 0;
}
